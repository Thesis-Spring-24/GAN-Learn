.wrapper-div {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.header {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.hint-text {
    font-size: large;
    line-height: 1.6em;
    font-weight: bold;


}

.activity-container {
    display: flex;
    flex-direction: column;
    row-gap: 0em;
    width: 100em;
    height: 57em;
    background-color: white;
    border-radius: var(--borderRadius);
}

.upper-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100em;
}

.generator-and-discriminator-container {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

.canvas-container {
    position: relative;
}

.clear-btn {
    position: absolute;
    top: 0.5em;
    left: 4em;
}

.hint-timer-text {
    display: none;
    position: relative;
    top: -3em;
    right: -5em;

}


.canvas {
    display: flex;
    align-items: center;
    justify-content: right;
    width: 39em;
}

#defaultCanvas0 {
    border: var(--borderWidth) solid var(--genBorderColor);
    border-radius: var(--borderRadius);
}

.left-side {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

.history-container {
    position: relative;
    align-self: flex-start;
    left: 4em;
    font-size: large;
    font-weight: bold;
}

.training-set {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 14em;
    height: 9em;
    border-width: 3px;
    border-style: solid;
    border-color: var(--imgBorderColor);
    border-radius: var(--borderRadiusElements);
}

.rotate-img {
    animation: bounce 200ms;
    animation-direction: alternate;
    animation-iteration-count: 30;
}

@keyframes bounce {
    from {
        transform: translate3d(0, 0, 0);
    }

    to {
        transform: translate3d(0, -0.5em, 0);
    }
}

.gen-training-data {
    display: none;
}

.gen-training-data:hover {
    cursor: pointer;
    box-shadow: var(--boxShadow);
}

.middle-container {
    display: flex;
    flex-direction: column;
}

.feedback-container {
    display: flex;
    width: 22em;
    height: 18em;
    align-items: flex-end;
    justify-content: flex-end;
}

.inner-feedback-container {
    display: none;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-width: 10em;
    width: fit-content;
    height: 5em;
    height: fit-content;
    border: 2px solid black;
    border-radius: var(--borderRadiusElements);
    margin-right: 1em;

}


.prediction-container {
    display: flex;
    flex-direction: column;
    width: 22em;
    height: 20em;
}

.moving-line {
    width: 22em;
    height: 4px;
    position: relative;
    transform: translateY(-50%);
    /* Center the line vertically */
    background-image: linear-gradient(to right, var(--arrowColor) 50%, transparent 50%);
    background-size: 15px 8px;
    /* Adjust the size of each dash */
}

.moving-line.gen-to-dis {
    top: 6em;
}

/*Adds the arrowhead*/
.moving-line.gen-to-dis::after {
    content: '';
    position: absolute;
    top: 57%;
    right: 0;
    /* Adjust the distance of the arrowhead from the end of the line */
    width: 0;
    height: 0;
    border-top: 10px solid transparent;
    /* Adjust the size and color of the arrowhead */
    border-bottom: 10px solid transparent;
    border-left: 20px solid var(--arrowColor);
    /* Adjust the size and color of the arrowhead */
    transform: translateY(-50%);
}

.moving-line.dis-to-gen {
    top: 1em;
}


.moving-line.dis-to-gen::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    /* Adjust the distance of the arrowhead from the end of the line */
    width: 0;
    height: 0;
    border-top: 10px solid transparent;
    /* Adjust the size and color of the arrowhead */
    border-bottom: 10px solid transparent;
    border-right: 20px solid var(--arrowColor);
    /* Adjust the size and color of the arrowhead */
    transform: translateY(-50%);
}

.moving-line.img-to-dis::after {
    content: '';
    position: absolute;
    top: 57%;
    right: 0;
    /* Adjust the distance of the arrowhead from the end of the line */
    width: 0;
    height: 0;
    border-top: 10px solid transparent;
    /* Adjust the size and color of the arrowhead */
    border-bottom: 10px solid transparent;
    border-left: 20px solid rgb(229, 222, 222);
    /* Adjust the size and color of the arrowhead */
    transform: translateY(-50%);
}

.moving-line.img-to-dis {
    top: 12em;
    background-image: linear-gradient(to right, rgb(229, 222, 222) 50%, transparent 50%);
    border-left: 20px solid rgb(229, 222, 222);
}

.moveLineLeft {
    animation: moveLineLeft 9s linear infinite;
    /* Adjust the animation duration and timing */
}

.moveLineRight {
    animation: moveLineRight 5s linear infinite;
}

@keyframes moveLineRight {
    0% {
        background-position: 0 0;
    }

    100% {
        background-position: 200px 0;
        /* Adjust the length the line moves */
    }
}

@keyframes moveLineLeft {
    0% {
        background-position: 100% 0;
        /* Move from outside the container to the right edge */
    }

    100% {
        background-position: -200px 0;
        /* Move to the left edge */
    }
}

.send-btn {
    position: relative;
    top: 5em;
    width: 5em;
}

.discriminator-container {
    width: 38em;
    height: 41em;
}

.timer-container {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    padding-top: 2em;
    padding-bottom: 4em;
}


.role-header {
    display: flex;
    justify-content: center;
}

.dis-container {
    display: flex;
    flex-direction: column;
    justify-content: left;
    width: 39em;
}

#discriminator {
    border: var(--borderWidth) solid var(--disBorderColor);
    border-radius: var(--borderRadius);
    width: 500px;
    height: 350px;
    background-color: white;
}

.discriminator-image {
    display: flex;
    align-items: center;
    justify-content: center;
}

.drawing-history-container {
    display: visible;
    background-color: var(--greyBackgroundColor);
    width: 90em;
    height: 14em;
    align-self: center;
    border-radius: var(--borderRadius);
}

.clear-btn-generator-storage {
    width: 5em;
}

.back-btn {
    align-self: flex-end;
}